def csv_to_dict(csv_file, k):
	"Takes a csv file (csv_file) and unique identifier (k) and returns a dictionary version of the file where the main keys are k"
	lines = csv_file.read().split("\n")
	for index, line in enumerate(lines):
		lines[index] = line.split(",")
		#Remove leading and trailing spaces from values
		stripped = []
		for item in lines[index]:
			stripped.append(item.strip())
		lines[index] = stripped	
	#save the header row as a special list of its own - items in this list will be the sub-keys for the dictionary
	headers = lines.pop(0)
	#print "The headers are: ", headers
	#create the dictionary
	dict = {}
	for line in lines:
		single_line_dict = {}
		#print zip(headers, line)
		for header, element in zip(headers, line):
			#print "header is {0} and element is {1}".format(header, element)
			single_line_dict[header] = element
			#print single_line_dict
		dict[single_line_dict.get(k)] = single_line_dict
	return dict

def dict_to_csv (dict, headers):
	csv_string = ""
	for header in headers:
		csv_string +=(header+',')
	csv_string +='\n'
	for v in dict.itervalues():
		for header in headers:
			csv_string += v.get(header)+','
		csv_string +=('\n')
	return csv_string

with open('2014_All_Contracts_Full_20140415',"r") as all_contracts_file:
	contracts_dict = csv_to_dict(all_contracts_file,"UniqueTransactionID")
	
